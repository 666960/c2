material Textured
{
    technique
    {
        pass
        {
            vertexShader = res/shaders/diffuse.vsh
            fragmentShader = res/shaders/diffuse.fsh

            u_worldViewProjectionMatrix = WORLD_VIEW_PROJECTION_MATRIX
            u_inverseTransposeWorldViewMatrix = INVERSE_TRANSPOSE_WORLD_VIEW_MATRIX
            
            sampler u_diffuseTexture
            {
                mipmap = true
                wrapS = CLAMP
                wrapT = CLAMP
                minFilter = LINEAR_MIPMAP_LINEAR
                magFilter = LINEAR
            }

            renderState
            {
                cullFace = true
                depthTest = true
            }
        }
    }
}

material TexturedFlat
{
    technique
    {
        pass
        {
            vertexShader = res/shaders/textured.vsh
            fragmentShader = res/shaders/textured.fsh

            u_worldViewProjectionMatrix = WORLD_VIEW_PROJECTION_MATRIX
            u_diffuseColor = 1.0, 1.0, 1.0, 1.0
            
            sampler u_diffuseTexture
            {
                mipmap = true
                wrapS = CLAMP
                wrapT = CLAMP
                minFilter = LINEAR_MIPMAP_LINEAR
                magFilter = LINEAR
            }

            renderState
            {
                cullFace = true
                depthTest = true
            }
        }
    }
}

material TexturedFlatTransparent
{
    technique
    {
        pass
        {
            vertexShader = res/shaders/textured.vsh
            fragmentShader = res/shaders/textured.fsh

            u_worldViewProjectionMatrix = WORLD_VIEW_PROJECTION_MATRIX
            u_inverseTransposeWorldViewMatrix = INVERSE_TRANSPOSE_WORLD_VIEW_MATRIX
            
            sampler u_diffuseTexture
            {
                mipmap = true
                wrapS = CLAMP
                wrapT = CLAMP
                minFilter = LINEAR_MIPMAP_LINEAR
                magFilter = LINEAR
            }

            renderState
            {
                blend = true
                srcBlend = SRC_ALPHA
                dstBlend = ONE_MINUS_SRC_ALPHA
                cullFace = true
                depthTest = true
            }
        }
    }
}

material TexturedSpecular
{
    technique
    {
        pass
        {
            vertexShader = res/shaders/diffuse-specular.vsh
            fragmentShader = res/shaders/diffuse-specular.fsh

            u_worldViewProjectionMatrix = WORLD_VIEW_PROJECTION_MATRIX
            u_inverseTransposeWorldViewMatrix = INVERSE_TRANSPOSE_WORLD_VIEW_MATRIX
            u_worldViewMatrix = WORLD_VIEW_MATRIX
            u_cameraPosition = CAMERA_VIEW_POSITION
            u_specularExponent = 50

            sampler u_diffuseTexture
            {
                mipmap = true
                wrapS = CLAMP
                wrapT = CLAMP
                minFilter = LINEAR_MIPMAP_LINEAR
                magFilter = LINEAR
            }

            renderState
            {
                cullFace = true
                depthTest = true
            }
        }
    }
}

material TexturedTransparent
{
    technique
    {
        pass
        {
            vertexShader = res/shaders/diffuse.vsh
            fragmentShader = res/shaders/diffuse.fsh

            u_worldViewProjectionMatrix = WORLD_VIEW_PROJECTION_MATRIX
            u_inverseTransposeWorldViewMatrix = INVERSE_TRANSPOSE_WORLD_VIEW_MATRIX
            
            sampler u_diffuseTexture
            {
                mipmap = true
                wrapS = CLAMP
                wrapT = CLAMP
                minFilter = LINEAR_MIPMAP_LINEAR
                magFilter = LINEAR
            }

            renderState
            {
                blend = true
                srcBlend = SRC_ALPHA
                dstBlend = ONE_MINUS_SRC_ALPHA
                cullFace = true
                depthTest = true
            }
        }
    }
}

material Colored
{
    technique
    {
        pass
        {
            vertexShader = res/shaders/colored.vsh
            fragmentShader = res/shaders/colored.fsh

            u_worldViewProjectionMatrix = WORLD_VIEW_PROJECTION_MATRIX
            u_inverseTransposeWorldViewMatrix = INVERSE_TRANSPOSE_WORLD_VIEW_MATRIX
            
            renderState
            {
                cullFace = true
                depthTest = true
            }
        }
    }
}

material ColoredSpecular
{
    technique
    {
        pass
        {
            vertexShader = res/shaders/colored-specular.vsh
            fragmentShader = res/shaders/colored-specular.fsh

            u_worldViewProjectionMatrix = WORLD_VIEW_PROJECTION_MATRIX
            u_inverseTransposeWorldViewMatrix = INVERSE_TRANSPOSE_WORLD_VIEW_MATRIX
            u_worldMatrix = WORLD_MATRIX
            u_cameraPosition = CAMERA_WORLD_POSITION
            u_specularExponent = 50
            
            renderState
            {
                cullFace = true
                depthTest = true
            }
        }
    }
}

material boy : TexturedTransparent
{
    technique
    {
        pass
        {
            defines = SKINNING;SKINNING_JOINT_COUNT 31;GLOBAL_ALPHA
            u_matrixPalette = MATRIX_PALETTE
            u_globalAlpha = 1.0

            sampler u_diffuseTexture
            {
                path = res/character.png
            }
        }
    }
}

material boyshadow : TexturedTransparent
{
    technique
    {
        pass
        {
            sampler u_diffuseTexture
            {
                path = res/shadow.png
            }
        }
    }
}

material floortiles : TexturedFlat
{
    technique
    {
        pass
        {
            sampler u_diffuseTexture
            {
                path = res/floortiles.png
            }
        }
    }
}

material rainbow : TexturedTransparent
{
    technique
    {
        pass
        {
            sampler u_diffuseTexture
            {
                path = res/rainbow.png
            }
        }
    }
}

material floor : TexturedFlat
{
    technique
    {
        pass
        {
            sampler u_diffuseTexture
            {
                path = res/floor.png
            }
        }
    }
}

material wallwest : TexturedFlat
{
    technique
    {
        pass
        {
            sampler u_diffuseTexture
            {
                path = res/wallwest.png
            }
        }
    }
}

material walleast : TexturedFlat
{
    technique
    {
        pass
        {
            sampler u_diffuseTexture
            {
                path = res/walleast.png
            }
        }
    }
}

material wallnorth : TexturedFlat
{
    technique
    {
        pass
        {
            sampler u_diffuseTexture
            {
                path = res/wallnorth.png
            }
        }
    }
}

material wallsouth : TexturedFlat
{
    technique
    {
        pass
        {
            sampler u_diffuseTexture
            {
                path = res/wallsouth.png
            }
        }
    }
}

material walloverhang : TexturedFlat
{
    technique
    {
        pass
        {
            sampler u_diffuseTexture
            {
                path = res/walloverhang.png
            }
        }
    }
}

material toybox : TexturedFlat
{
    technique
    {
        pass
        {
            sampler u_diffuseTexture
            {
                path = res/toybox.png
            }
        }
    }
}

material white : ColoredSpecular
{
    technique
    {
        pass
        {
            u_specularExponent = 50
            u_diffuseColor = 1, 1, 1, 1
        }
    }
}

material green : ColoredSpecular
{
    technique
    {
        pass
        {
            u_specularExponent = 50
            u_diffuseColor = 0.8, 1, 0, 1
        }
    }
}

material lightblue : ColoredSpecular
{
    technique
    {
        pass
        {
            u_specularExponent = 50
            u_diffuseColor = 0.18, 0.85, 1, 1
        }
    }
}

material basketball : TexturedSpecular
{
    technique
    {
        pass
        {
            u_specularExponent = 25

            sampler u_diffuseTexture
            {
                path = res/basketball.png
                wrapS = REPEAT
                wrapT = REPEAT
            }
        }
    }
}

material playtable : TexturedFlat
{
    technique
    {
        pass
        {
            sampler u_diffuseTexture
            {
                path = res/playtable.png
            }
        }
    }
}

material easel : TexturedFlat
{
    technique
    {
        pass
        {
            sampler u_diffuseTexture
            {
                path = res/easel.png
            }
        }
    }
}

material door : TexturedFlat
{
    technique
    {
        pass
        {
            sampler u_diffuseTexture
            {
                path = res/door.png
            }
        }
    }
}

material black : ColoredSpecular
{
    technique
    {
        pass
        {
            u_specularExponent = 50
            u_diffuseColor = 0.13, 0.13, 0.13, 1
        }
    }
}

material basketballnet : TexturedFlat
{
    technique
    {
        pass
        {
            sampler u_diffuseTexture
            {
                path = res/basketballnet.png
            }
        }
    }
}

material backboard : TexturedFlat
{
    technique
    {
        pass
        {
            sampler u_diffuseTexture
            {
                path = res/backboard.png
            }
        }
    }
}

material doorframe : TexturedFlat
{
    technique
    {
        pass
        {
            sampler u_diffuseTexture
            {
                path = res/doorframe.png
            }
        }
    }
}

material windowledge : TexturedFlat
{
    technique
    {
        pass
        {
            sampler u_diffuseTexture
            {
                path = res/windowledge.png
            }
        }
    }
}

material bookshelf : TexturedFlat
{
    technique
    {
        pass
        {
            sampler u_diffuseTexture
            {
                path = res/bookshelf.png
            }
        }
    }
}

material book : TexturedFlat
{
    technique
    {
        pass
        {
            sampler u_diffuseTexture
            {
                path = res/book.png
            }
        }
    }
}

material tabletop : TexturedFlat
{
    technique
    {
        pass
        {
            sampler u_diffuseTexture
            {
                path = res/tabletop.png
            }
        }
    }
}

material tableleg1 : TexturedFlat
{
    technique
    {
        pass
        {
            sampler u_diffuseTexture
            {
                path = res/tableleg1.png
            }
        }
    }
}

material tableleg2 : TexturedFlat
{
    technique
    {
        pass
        {
            sampler u_diffuseTexture
            {
                path = res/tableleg2.png
            }
        }
    }
}

material tableleg3 : TexturedFlat
{
    technique
    {
        pass
        {
            sampler u_diffuseTexture
            {
                path = res/tableleg3.png
            }
        }
    }
}

material tableleg4 : TexturedFlat
{
    technique
    {
        pass
        {
            sampler u_diffuseTexture
            {
                path = res/tableleg4.png
            }
        }
    }
}

material storageorganizer : TexturedFlat
{
    technique
    {
        pass
        {
            sampler u_diffuseTexture
            {
                path = res/storageorganizer.png
            }
        }
    }
}